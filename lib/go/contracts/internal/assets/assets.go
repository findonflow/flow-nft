// Code generated by go-bindata. DO NOT EDIT.
// sources:
// ../../../contracts/ExampleNFT.cdc (9.065kB)
// ../../../contracts/MetadataViews.cdc (13.111kB)
// ../../../contracts/NonFungibleToken.cdc (4.832kB)

package assets

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	clErr := gz.Close()
	if clErr != nil {
		return nil, clErr
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _examplenftCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x1a\x5d\x8f\xdb\xb8\xf1\xdd\xbf\x62\xb2\x0f\xa9\x9c\xee\xda\x2d\x50\xf4\xc1\x58\x67\x13\x64\x63\x74\x81\x3b\x23\x48\xdc\xf6\x21\x58\xf4\x68\x71\xbc\x26\x56\x22\x0d\x92\xb6\xcf\xb7\xe7\xff\x5e\x0c\x45\x49\x94\x44\xd9\x4e\x13\xa0\x67\x1c\x2e\xb6\x38\x33\x9c\xef\x2f\xed\xf8\x0d\x0c\xde\x0c\xde\x00\x2c\xd6\xc2\x80\x30\xc0\x24\xe0\xaf\x2c\xdf\x64\x08\x82\xfe\x9f\xa3\xb4\xcc\x0a\x25\x41\xad\x80\xc1\x2c\x53\x7b\x98\x2b\x79\x33\xdb\xca\x27\xb1\xcc\x10\x16\xea\x19\x25\x51\x78\xb0\x84\x2f\x95\x85\x0d\xd3\x96\xc0\xed\x1a\x41\xad\x56\x22\x15\x2c\x03\x63\x99\xe4\x4c\x73\x58\x6e\x2d\x08\x0b\xcc\x98\x6d\x8e\x1c\xac\x82\x25\x12\xbe\x11\xb9\xc8\x98\xa6\x07\x6b\xb5\x87\x9c\xc9\x03\xcc\x67\x0b\x03\x7b\xb5\xcd\x78\xcd\x8d\x23\x9b\x2a\x8d\xb0\xda\xca\x94\x58\x63\x99\xb0\x87\x51\x20\x47\xaa\xa4\xd5\x2c\xb5\xc0\x15\x16\x2c\xd5\xd8\x44\xd6\xa8\xcd\x5a\x18\x2b\x52\x66\x91\x43\x9a\x31\x63\xc4\x8a\x7e\x09\xe5\x44\x31\x07\x63\x31\x87\x95\xd2\x20\xac\x71\x5c\x8c\x48\x3e\x8e\x2b\x21\xd1\x00\x23\x66\x49\x45\xf3\xd9\x02\xf6\xc2\xae\x21\x17\x52\xe4\x2c\x83\x1c\x2d\xe3\xcc\xb2\x11\x91\x81\xc1\x9b\xf1\x60\x20\xf2\x8d\xd2\x96\x94\x56\xea\xcc\xa9\x0c\x56\x5a\xe5\x70\x35\x1a\xb7\x0f\x46\x29\x4f\xaf\x4a\xac\x9f\x3d\xbd\x7f\x09\xdc\x9b\x0a\xa5\xf1\xb4\x80\x1f\x6c\xb6\xcb\x5a\xee\x8f\x85\x09\xe7\xb3\xc5\xa4\x7b\xf1\xcb\x60\x00\x00\x40\x08\x3b\xa7\x6f\xcb\xb2\x2f\xdb\xcd\x26\x3b\x4c\xe0\x9f\x0f\xd2\xfe\xfd\x6f\x35\x00\xee\x48\x67\x1f\x3c\xdd\x07\x29\xac\x60\x99\xf8\x0d\x79\x32\x6c\xc1\xfc\x5b\xd8\x35\xd7\x6c\x9f\x08\x5e\x92\xb9\x76\x0c\x4f\xe0\x3d\xe7\x1a\x8d\xb9\x6b\xa3\xdc\xe3\x46\x19\x61\x1b\x18\x56\x85\xf0\x15\x42\x86\xc4\x45\x96\xa1\x33\xf8\x17\xab\x34\x7b\xc2\x4f\xcc\xae\x27\x10\xfc\xe8\x01\xff\xb4\x5d\x66\x22\x2d\xa0\xeb\xef\x0d\xe0\x9f\x85\xb4\xa8\x7b\xe9\x56\xb0\x1a\x8d\xda\xea\xd4\x59\xbe\xab\xda\xd1\xc3\x7c\xb6\xb8\x6e\x1a\x6d\xf4\x19\x8d\xca\x76\xa8\xe1\xc5\x51\x09\x6f\xad\x05\x1f\x74\xce\x24\xcb\x91\x98\xd0\x42\x3e\x75\x0e\x39\x9a\x54\x8b\x0d\x09\xd7\x0b\x63\xd7\xdb\x7c\x29\x99\xc8\x3a\x10\x2c\x4d\xd1\x98\xc4\x60\xb6\x1a\x3a\x50\xad\x0e\x2c\xb3\x02\xcd\x04\xbe\xb6\x98\x77\x27\x87\xc7\x9a\x3f\x21\x85\x4d\xaa\x5f\xee\x49\x6d\xbe\xc6\xf3\x50\x82\xe6\x49\x84\xfd\x26\x40\x87\xf7\xe6\xf1\x05\xfc\x96\xa0\xc3\x40\xed\xf4\x21\xa1\x47\x82\xc3\x14\x04\xef\x1e\x10\xcb\x30\x75\x9c\x77\x0f\x03\xae\x61\x1a\xca\xd0\x05\xad\xf8\x87\x69\x2d\x4b\x17\xac\x92\x03\xa6\xb5\x4c\x15\xd8\xd1\x7d\x6b\xd8\x75\xb5\x95\xf0\x84\xd6\xc9\x9a\x0c\x27\xf0\x75\x71\xd8\xe0\x63\x4b\x44\x8d\x76\xab\x25\x7c\x6d\x3c\xa4\x0f\x01\xdf\x36\xf5\x75\x2f\xcc\x26\x63\x87\xb7\xc9\xf0\xfa\x12\xf0\xcf\x25\x93\x97\x22\xcc\x67\x8b\x3a\x0e\xef\x99\x65\x97\x22\x7e\xe4\x82\x50\xde\xfa\x3c\x53\x7e\x1e\x03\xed\x74\x34\xa3\x8b\x48\x23\x02\xc9\x7f\x60\x27\x70\x3f\x71\xa4\x87\x13\x78\x2f\x0f\x5f\xac\xde\xa6\xf6\xae\xed\x0f\x7b\x61\xd3\xb5\x03\x6e\x9d\xd0\x27\x65\x06\x4f\xab\x6d\xd2\xc1\x09\x4c\x10\x45\x4a\xa2\x18\x50\x05\x4c\xe5\x88\x5d\x3d\x95\x9f\x46\xfc\xb4\x7d\xb3\x1f\x2d\x88\xaa\x26\x67\xff\x58\x2c\x3e\xcd\x44\x86\xfd\xac\xd1\x67\xab\xb3\x49\xcb\xbd\x7b\xe1\x87\xd1\x93\xee\xd3\x3e\x05\xd7\xe6\x8f\x2b\x78\x3c\x86\xc5\x1a\x35\x16\x2d\x07\xe4\xec\x57\x90\xdb\x7c\x89\x9a\xfa\x0e\xd7\x35\xd8\x35\xb3\x90\x32\x09\x4b\xa4\xea\x4c\x85\xde\x95\x4f\x1b\x36\x08\x7d\xb4\x8d\x72\x5d\x06\x91\xc5\x82\x13\x58\x09\xcc\x38\xec\x58\xb6\x75\x97\x1a\xca\xb0\x0a\x64\x8f\x0e\x28\xab\x7a\xcc\x07\xb9\x52\x30\x85\xa8\x7c\x74\x96\x14\x66\xbf\xf2\x35\xdb\xf5\x14\xfe\xf8\xea\xda\x4b\x35\x29\xf3\xd6\x35\xf1\x34\xa1\x6b\xe3\x1a\x0e\xee\xfd\x49\x18\xdb\xc9\x8f\xc1\xbd\x8f\x30\x85\xaf\x01\x8f\x8f\x97\x7b\xb2\xa7\xd2\xef\x2e\x01\x0b\xdf\xe9\x08\x61\xc6\xf9\x86\x58\xab\xd0\xfa\x79\x6c\x66\xe0\xef\x64\x33\x96\xe7\xbe\x81\xdd\x0e\xfa\x09\xb6\xc3\x1e\xa5\xee\xf3\x46\xd1\xee\xa8\x3f\x17\x6c\x82\x9e\x28\x4a\xa5\x6e\x94\x4e\x10\xd1\x6a\x27\x38\xea\x82\xcc\x78\xa3\xc5\x8e\x59\x1c\x63\x45\xaf\x26\x77\x8e\x93\x1a\xb2\xc8\xd9\xb7\xaf\xa3\x5c\xbd\x04\x4f\x3f\x46\xae\x29\xb8\x3e\x46\xab\x4c\xf3\xc2\x9f\x84\x7c\x46\x4e\x57\xfd\x80\x0b\xaf\x3b\x9d\xe0\x79\x88\xcf\x98\xa2\xd8\xa1\xbe\x8e\xb7\x8b\x35\x81\x33\xd2\x78\x1b\xfc\xdf\xe5\xf9\xe4\x19\xf9\x4e\x79\x52\x8d\xcc\xe2\xc7\x7c\x63\x0f\x35\xca\xcc\x4f\x7a\x13\x48\xa8\xd0\x53\xeb\xf3\xee\x04\x8b\x91\x4a\x1e\x7e\x7c\x08\xde\xde\x04\xba\x88\x5e\x9b\xc4\x93\x2c\x7d\x8e\x97\x54\xb8\x63\xac\x2f\x0b\x4b\x46\x01\x70\x8c\xcc\x17\x6e\x1e\x59\xb1\x14\xa1\xdf\x4a\xad\x89\x82\x34\xc3\xfd\x48\x65\x49\x23\x31\x25\xcd\x67\x8b\x61\xac\xa5\x7c\xb8\x2f\x1a\xca\xa2\x91\x7f\xec\x80\x2c\x95\xd6\x6a\x3f\x9f\x2d\x82\x69\x6d\x38\x81\xd7\xb1\x0b\x7a\x90\x6b\x41\x5a\x34\x02\x33\xcc\x67\x8b\x76\x87\xb6\x51\xc6\x46\x0c\x9a\x68\x34\xdb\xcc\xc2\x74\xea\xaa\x21\xfc\xfe\x7b\xf9\xe8\xce\xf5\xf7\xd4\xe0\xf7\xa4\xe0\xab\x0f\x4c\x4a\x65\x3d\x5b\x81\x82\x41\xe3\x0a\x35\xca\x14\x27\xae\xfe\x3f\xdc\x97\x6b\x8c\xc2\x76\xc8\x6b\x08\x6a\x02\x84\x4c\x95\xd6\x98\xda\xab\x1e\xb3\xf7\xdb\x37\xcc\x77\x27\xe2\xb0\x3b\x62\x56\x61\xd6\x3d\xaa\x32\x4a\xf7\xa8\x4b\xf8\x5c\x94\x06\x2a\x1f\x8f\x81\x8b\x62\xd3\xa2\x0f\xbe\xc1\xa2\x16\x6a\xa5\x74\x2e\xe4\x13\x38\x67\x33\x21\x38\x01\x08\x03\xac\x96\xd7\x1e\x36\x58\xac\x4a\x98\x84\x5f\x0a\xdb\xff\x42\x0a\x76\x7d\x55\xc3\x63\x76\x4c\x83\xda\x4b\xe4\xd4\xc7\x4d\xe0\xdd\x4b\x01\x1d\x19\xb7\xe7\xb3\xc5\xb1\x39\x99\x42\x12\x1d\xf8\x2a\x72\x70\x7b\x03\x2f\xc7\xd8\x10\x31\x1e\x3b\xf6\xb8\x66\x7b\xd0\x98\xab\x1d\xba\x65\x18\x49\xe2\xfb\x46\x84\xb4\xd6\x0e\x93\x1c\x0a\x20\xe1\x1a\x41\x77\xcc\xb2\x0c\x75\xc7\xfb\x4b\xb2\x49\xf9\xe5\xe1\x3e\xf0\xfe\x68\x88\xb6\x64\x70\xe3\xbc\xdb\xdd\xdc\xde\xb4\x04\x1a\x15\xbc\x26\xcf\x78\x98\x40\x7d\xc1\x10\xee\xee\x60\xc3\xa4\x48\x93\xab\x5c\x18\x43\x66\x9a\xcf\x16\x57\xc3\x41\x83\x30\xe6\xa2\xb5\xb9\x71\xd7\xb8\x46\xb3\xd8\xdd\x54\xb7\xe9\xbb\x11\x2b\xf6\x32\x2d\x1a\x55\x36\x75\xa8\x3d\xaa\xf5\x79\x09\x2c\x7b\x76\xfb\x33\x92\x91\x54\xc8\x38\x6f\x68\xb0\x52\xb0\x09\x5c\x2e\x24\x54\x21\xf9\xf8\xf4\x88\x82\x03\xd3\x9a\x1d\xfe\xb7\x84\x78\x4a\xdd\xc5\x17\x66\x5e\xc1\xbb\x66\x9e\x1a\x74\x70\xea\xac\x46\x63\xbf\x57\x64\x13\x8c\x24\xe0\xdc\xb1\x2c\x71\xef\x89\x7b\x19\x82\x18\xdb\xaf\x45\xba\xae\xdc\xd0\xed\x51\x33\x0e\x4a\x62\xe7\x4e\x95\xf1\x45\xdc\x33\xbe\x0a\xfe\x58\x09\x10\x31\x7b\xb8\x7d\x23\x7b\x5b\x75\x89\xb5\x39\x1a\xab\xd5\xa1\xba\xb7\xc7\xde\x45\x45\xf1\xbe\xe1\x02\xc9\x99\xa7\x4c\xa7\x74\xe6\x06\x34\x46\x23\x9c\x6c\xd9\xfe\x82\xfa\x14\x5f\x79\xb4\x42\xe3\x19\x0f\xa6\x87\xbf\xaa\x9c\x11\xed\x22\x51\x95\x79\xdd\xaa\x32\xee\xfb\x19\x2b\x47\x44\x66\x83\xc0\x77\xd3\xa6\x46\xc6\xdd\xd2\xb8\xdc\x04\x3b\x8f\x25\x80\xf2\xe9\x5a\x71\xf3\x5d\xe5\x35\x2e\x7b\xf2\x3a\x62\x7e\x66\xe2\x24\xee\x86\xaf\xc2\x1a\xf5\x63\x0b\xb6\x58\xc5\x3c\xf1\x95\xab\xd3\x91\x42\x3e\x1e\xc3\x07\xd7\x7c\x39\x2f\xd9\xda\xb5\xd2\xe2\xb7\x46\xa5\x25\x8b\x64\x99\xda\x03\x57\x7b\x99\x32\x63\xc3\x65\x66\x18\x0c\x1a\x57\x30\xed\xd5\x04\xd1\x3e\xaf\x8e\x96\x5a\x89\x24\x05\x7f\x4b\xe6\x56\xbd\x3f\xdf\xe7\xf5\xa8\x98\xaa\x6f\x59\x7b\x5b\x4a\x7e\x2f\x0f\x9f\x7d\xf5\x7c\x89\x17\xeb\x63\x24\x6f\xc9\x95\xfd\x21\x2a\x70\x8b\x84\xba\x31\x9a\x3a\xc2\xe7\x14\xe1\x25\x0f\xf0\xc8\x01\x2f\x10\x24\xa6\x28\x9f\x69\x3a\x05\xbd\xcc\x40\x4d\x09\xe3\x2d\xd7\x78\xec\xa7\xbd\xea\x5d\x91\x4f\x3b\xf2\xa0\x24\xba\x80\x75\xa1\x69\x95\x9f\x3b\x80\xb9\xbc\x8c\x34\x07\xb4\x03\xbf\xb4\x5c\xcf\xa8\x70\xf1\x48\x52\x15\xcc\xf2\xce\xce\xc0\x51\x73\xff\xb9\xea\x9f\x0a\xb6\x81\xf1\x5c\x48\x50\x1a\x8c\xa2\x5c\x42\x75\xbd\x7c\x71\x56\xbc\x27\x53\x7b\xe9\xdf\xa9\x79\x12\x6c\x99\xb9\x10\xca\x85\xb4\x4e\xb8\x4a\x5d\xe3\x71\xb7\x2f\x9d\xcf\x16\xc5\xbb\x90\xf2\x35\x91\xa7\x42\xd8\x64\x50\xfa\xd7\x78\x2d\x55\x6f\xbf\x8a\x9f\x0f\xf7\xed\x42\x5d\x56\x7d\xfa\x4f\xfa\x3e\x3a\x15\x1b\x81\x44\x23\x68\xa6\xb6\xae\x3f\xb1\x6b\x14\x3a\x7c\x5c\x65\x80\x4e\xf0\x78\x6e\x92\x96\xf7\x79\xda\x13\x78\xfd\x72\xb6\x03\x3e\xfe\x41\x5f\x56\xb4\xdb\x85\x86\x5f\xb6\x03\x8e\x5a\x65\x89\xae\x8e\xd5\xee\xd4\x51\x0c\xf8\x97\x34\x41\xe4\x06\x2f\xfd\xba\xa3\x78\xa1\x8b\xf8\x0a\xba\xa1\x8d\x93\x5b\xe7\x40\x2d\xd5\xd7\x2e\x54\xa0\x9d\xf8\x2e\x6e\xd8\xd1\xc8\x09\xaf\xfa\x93\x01\x96\xa6\x6a\x2b\x6d\xc3\xa7\xba\x8e\x04\xa1\xbf\x8c\x5a\x4d\xe2\xed\x4d\xa1\xd3\xd6\xd5\x71\xf5\xc1\xb4\xef\xe0\xcf\x3e\x99\x27\x7f\x1d\xc6\xb3\x93\x7b\x95\x36\x6c\x0e\x5a\xf5\x2b\x56\x27\x99\xa3\x07\xc6\x11\xac\xc0\x8a\x1d\x7c\x83\x85\xbf\x34\x82\xf5\x0b\x16\x7d\x09\x99\x90\xc3\x86\xd9\xb5\x69\x22\x47\x97\x85\x30\x85\xb1\xdf\x2e\x46\x57\x78\x7d\x24\xea\x4d\x21\x51\x28\xf2\xed\x05\x04\x3a\xaf\x5c\xe3\xf7\x17\x60\x0d\xf1\xca\x76\x21\x48\x9c\x75\x02\xa3\xbc\x63\xd8\x0e\xfd\x54\xe1\x09\x56\xe8\x54\xd7\x82\x14\x73\x22\x09\x57\x8c\x7a\x8f\x1a\x11\xd5\xe4\xf6\xa6\xc6\x0e\x7a\xe6\xa8\x42\x87\x0d\xae\xab\x40\xf6\x15\x29\x65\x1b\xb6\x14\x99\xb0\x07\xf7\x87\x06\x3d\x9d\x66\x83\x83\x4c\xc8\xe7\xbe\xbd\xde\x05\x23\xff\x65\xab\xbf\xb3\x9b\x81\xe3\xdb\xa4\x3b\x61\x9f\x5f\x1c\x5b\xa6\x9f\xd0\x9e\xd2\xd7\x20\x12\xf3\xa1\xb9\x7d\x61\xfa\x16\x53\xe7\x05\x4a\x23\x39\x16\x64\xce\x58\xb9\x40\x0c\x2c\xdc\x71\xd7\x80\x49\x37\x4f\xf5\xff\x91\xc4\x71\x70\x1c\xfc\x37\x00\x00\xff\xff\x49\xb4\x7b\x55\x69\x23\x00\x00"

func examplenftCdcBytes() ([]byte, error) {
	return bindataRead(
		_examplenftCdc,
		"ExampleNFT.cdc",
	)
}

func examplenftCdc() (*asset, error) {
	bytes, err := examplenftCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ExampleNFT.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xee, 0x9c, 0x4d, 0x7c, 0x82, 0xd8, 0x75, 0xb, 0x17, 0x30, 0xc4, 0xc4, 0x25, 0x56, 0xb4, 0xec, 0x14, 0xf1, 0x42, 0x9e, 0x5b, 0xb3, 0x42, 0x84, 0xd4, 0xe7, 0xbe, 0x0, 0xe3, 0x21, 0x6c, 0xae}}
	return a, nil
}

var _metadataviewsCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x5a\x6d\x6f\x1b\x39\x92\xfe\xee\x5f\x51\xf0\x02\x03\x2b\x23\xb7\x9c\x5c\x2e\xb8\x33\x46\x33\x97\x4d\xe2\x59\x1f\x92\x9c\xe1\x38\x7b\x07\x0c\x82\x98\xea\xae\x96\x78\x61\x93\x3d\x24\xdb\xb2\x36\xc8\x7f\x3f\x54\x91\xec\x17\x75\xcb\x71\x0e\x9b\x0f\x8e\xa4\x26\x8b\x55\x4f\xbd\x17\x7b\xf1\xe4\xc9\xd1\xd1\xcd\x46\x3a\xc8\x8d\xf6\x56\xe4\x1e\x64\x55\x2b\xac\x50\x7b\x07\x7e\x83\x50\xa1\x17\x85\xf0\x02\x9c\x17\xba\x10\xb6\x80\xda\x9a\xda\x38\x2c\x8e\xa4\x86\x8b\xb7\x97\x57\xa7\x67\x2f\xfe\xe5\x45\x76\x74\x74\x8d\xe5\x39\x6c\xbc\xaf\xdd\xf9\x62\xb1\x96\x7e\xd3\xac\xb2\xdc\x54\x0b\xa3\x4b\x65\xb6\x0b\xfe\xb3\x52\x66\xb5\xa8\x84\xf3\x68\x17\xa5\x92\xb5\x5b\x3c\x3b\x7b\xf6\xf4\xec\xdf\x9f\xbe\x38\xd5\xa5\x3f\x4d\x87\x65\x55\x71\x74\xf4\xc1\xdb\x26\xf7\x0e\x84\x2e\xc0\xa2\x33\x8d\xcd\xd1\x41\x2e\x74\xc7\x22\x18\x8d\x60\x2c\x54\xc6\xe2\x51\xcb\xa9\xdf\xd5\xe8\xe6\x90\x0b\xa5\xb0\x80\x3b\x89\x5b\x97\xc1\x1b\x91\x6f\xf8\x33\x3f\x06\x8b\xb5\x45\x47\x52\x1e\x09\x28\x64\x59\xa2\x25\x7a\x5f\xa4\x2e\xc0\x94\xad\xd4\x73\x70\x4d\xbe\x01\xe1\x40\x40\x6e\x51\x78\x63\x61\x25\xcd\xda\x8a\x7a\xb3\x3b\x32\x16\x04\xfc\xe7\xd5\x9b\xdf\x41\x56\x62\x8d\x50\x4a\x85\xd9\xd1\x93\xc5\xd1\x91\xac\x6a\x63\x3d\x5c\x34\x7a\x2d\x57\x0a\x6f\xcc\x17\xd4\x50\x5a\x53\xc1\x71\xb6\x68\xbc\x54\xd2\xef\x16\x83\xa7\x59\x5e\xe4\xc7\x69\xdf\x7b\xa3\xa7\xb7\xee\x3f\x08\xbb\x8e\xea\x66\xd5\x29\xf0\x5d\xe4\xfd\xef\x24\x38\x7c\x3d\x3a\x02\x00\x58\x2c\x16\xf0\x12\xae\xd1\x19\x75\x87\x96\x74\x78\x27\x0b\x74\x20\xf2\x1c\x9d\x03\x6f\x40\x80\x43\xdf\x97\x3d\x22\x97\xb6\xf7\xc8\x38\xd6\x0c\x01\x9f\xf4\x02\x27\x98\xad\x33\x10\x1a\xde\x5f\xdc\xcc\xf6\x94\xe4\xc9\xbe\xa4\xf6\x68\x4b\x91\x63\x4b\xc7\x9b\xc4\x46\x8f\x0b\x32\x39\x3e\x17\xfc\x46\x78\x90\x1e\x5c\x53\x13\x26\x7b\x8c\x90\xc4\xed\xe1\x2d\xed\x4e\xc0\xaf\xbc\x2a\xad\x2c\x1b\x0d\x6b\xf4\x8c\xc8\xc9\xec\x1c\xfe\xb8\xd9\xd5\xf8\x69\xb4\xc4\x86\xdd\xb4\xec\xe4\x33\xb3\x71\x0e\xb4\x72\x76\x0e\x2f\xf5\x2e\xd8\xe3\x6f\xbc\xeb\xdb\x14\xaa\xaf\x8c\x52\x98\x7b\x69\x34\x48\x32\x98\xb5\x35\x4d\x4d\x88\xb2\xd9\x45\xe2\x96\xa0\x28\xf0\x1e\x56\x3b\xb8\x7c\xfd\x43\x42\xf5\xe8\x8f\xc5\x5b\x19\x6b\xcd\x96\x58\x4f\xcb\x4f\x64\x71\x0e\x1f\x2f\xb5\x7f\xf1\x7c\x76\x0e\x3f\x7d\x4d\xbf\x7f\x9b\x82\xe6\xf2\x75\x00\x26\xac\xff\xb4\x2f\xe4\x6b\xe9\x6a\x25\x76\x41\xae\x95\x70\x32\x8f\xbe\xc4\x4a\xd2\xb9\x6a\xc8\x98\x48\x79\x5a\x54\x38\x87\x02\x5d\x6e\x65\xcd\xbc\x0a\x5d\x74\x3a\xdf\x34\xd5\x4a\x0b\xa9\xa0\x24\xe7\xd1\x60\x56\xff\x8b\xb9\xcf\xe0\x9d\x71\x3e\x7e\x71\xe0\x36\xa6\x51\xc5\xbe\x05\xd1\x81\x63\xbc\xa2\x2d\x26\x06\xa3\xb9\xa7\xf3\x6e\x22\x47\xa4\x05\xe2\x2e\x1d\xd7\x5f\xb4\xb7\x41\x3a\x28\x25\xaa\x02\xb6\x52\x29\x58\x21\x14\x81\x34\x16\x20\x35\x28\xe9\x62\x48\xf2\x1b\xb4\x58\x1a\x8b\x91\xdd\x01\x99\x15\xff\x6a\x3d\x89\x98\x1b\x9d\x4b\x87\xd9\xe4\x99\x24\x82\x42\xcf\x4c\x9e\xc3\x07\x6f\xa5\x5e\x0f\x45\x78\x09\x5b\x2b\xbd\x47\x3d\x00\xf5\x9f\x25\x8f\x80\x02\xbd\x90\x29\x50\x0e\xe9\xce\x07\xa4\x9c\x61\xbf\x5e\x21\x87\x5b\xb8\x43\xbb\x32\xae\xf5\x7c\xa8\x85\x15\x1c\x17\x41\x6a\xe7\x51\x70\x1c\x15\xe0\xa4\x5e\x2b\x04\x25\x35\xce\x1e\x86\xa0\x27\xde\x21\x24\x5c\x25\x94\xea\x19\x51\x1b\xc5\xc5\x04\x28\x8f\xc1\x24\x5a\xda\x0a\x41\xc0\x16\x57\xa7\xa5\x95\xa8\x0b\xb5\xe3\x50\x0e\x27\x32\x43\x8e\xef\x73\xb8\x7a\xff\xfb\x6c\x40\x84\x2d\x3f\xe2\x31\xb6\x90\x39\x09\xfc\x05\x6a\x8b\x1c\xcc\xe6\x80\x3e\x7f\x58\xfa\x56\xa8\x5e\xac\xf9\x7a\x21\x15\x7e\xeb\x40\x90\x5a\xfa\x93\xf6\x1b\xfd\xeb\x9b\xcd\x7c\xf0\x64\x02\xcd\xe1\x82\x07\x0e\x4c\x4b\x66\xbd\x38\x43\xff\x1c\xaa\x32\x63\x77\x5a\xf2\xc9\xe3\x87\x7d\x13\x5d\xf6\x79\x18\x2f\xed\xb4\xb8\xec\x78\x69\x97\x7d\xdb\x8f\x40\xc4\x59\x0c\xab\xa8\xd1\xca\xbc\x17\x20\x59\x17\x5d\x46\x07\x11\xd4\xe7\xbc\xb1\x58\x00\x19\x86\x05\x53\x96\x90\x6f\x84\xd4\xe3\x84\x46\xa4\x5d\xd2\x65\xe3\xb0\xa0\x44\x64\x91\x4b\x02\x2a\x39\x38\xb9\xbb\x39\x50\xaa\x32\xc1\xf9\x0d\x79\x3f\x54\x58\x48\x71\x30\x24\x75\xfc\x31\xef\xe3\x90\xdd\x58\x49\x31\x37\x9a\xfa\x9e\xbc\x7f\xbb\xb9\xb9\xea\x64\x66\x79\x42\xb0\x4d\x39\x9b\x6a\x00\x10\x1c\x61\x68\x2d\x9c\x18\xcb\x1f\x3e\xcc\xe0\xe3\xf5\xdb\x18\x12\x26\xd8\x4a\x84\xcf\xa7\xd8\x22\x4b\x6c\xac\x1a\xfb\x1f\x9b\x5e\xef\xc9\xa4\x69\x34\x96\x94\xd9\xd8\xbe\x1a\x1f\x96\x7a\x8f\x8a\x45\xdf\x58\xdd\x12\x3b\x6c\x0d\x97\x57\x17\x1f\x98\xfd\xb0\x83\x20\xea\xec\x29\x16\x63\xfd\x04\xd3\x6e\x8c\x36\x41\x05\x9d\xee\x55\x6d\xe4\xb8\x44\x73\x6c\x1c\xf4\x6b\xb4\x00\x10\x16\x3b\xbb\x28\x28\x83\xfb\x0d\x4a\xcb\xa5\x17\xa5\x29\x59\xa0\xf6\xb2\x94\x68\xe1\xe4\xd5\xe5\xeb\x59\x4b\xc4\x0a\xb6\x17\xbf\x11\x1c\x71\xa5\xc5\xdc\xc3\xc7\xeb\xcb\x0c\x5e\x42\xae\x24\xed\x15\x75\xad\x64\x1e\xe2\x18\x99\x62\xe3\x30\xa4\xbd\x57\x97\xaf\xfb\x25\x53\x49\x15\x2a\x99\xa0\x32\x82\x93\x50\x94\xe2\x4e\x0a\x12\x89\xd9\x5d\x0b\x8f\x5b\xb1\x3b\x68\x99\x09\xbd\xd6\x04\x06\x91\xed\xd5\xe5\x6b\xb2\x32\x22\x3d\x21\x18\xc1\xca\x7c\xf1\x49\xa1\xe2\xed\xed\x1e\x50\x1a\x74\x04\x85\xc9\x5d\x26\xeb\xd2\x65\xd2\x2c\x28\x27\x62\xed\xdd\x22\x9e\x70\x2a\x8a\xc2\x92\x51\xeb\xf5\xe2\xc1\x30\x99\x53\x51\x33\x95\x1c\xae\x84\xdf\xb0\x73\x68\x30\x1c\x71\x84\x82\x9a\x7e\x8b\x45\x65\x19\xac\xa5\x2d\xae\x5a\xb0\x82\x36\x8c\xdd\x3d\x2a\x61\x48\x07\x46\xab\x1d\x68\xc4\x82\xe2\x7d\xd9\x11\xe7\x22\xd7\x71\x39\xfb\x18\xa2\x8f\x00\x87\xc8\x9e\xba\x9d\xf3\x58\xb9\x87\x61\x21\x49\x13\x2e\xbf\xed\x79\x6d\x0f\xb2\xf9\x70\xe1\xa4\x13\xe7\xb2\x80\x25\xe1\x3c\x7e\xc4\x78\x2e\x99\xc6\x94\x87\x77\x50\x35\x3a\x94\xa9\xc9\x3b\x09\x23\x06\x5b\x0b\x2f\xef\x90\x02\x54\x67\x48\xff\x5f\x1b\xda\x98\xed\xa9\x37\x8b\x68\x39\xa7\xf4\xf3\xa9\xd1\xa7\x5b\x5c\x2d\xfe\x12\xce\x39\x6d\xac\x72\x07\x71\xfb\x5e\x30\x92\x65\x0b\x2d\x2c\x7b\x00\x0c\x57\x41\x17\xb6\x8e\x89\x85\xf3\xc5\xe2\x38\x23\x0d\x0a\x7f\x92\xf0\x9c\xa5\x1f\x8e\x17\xc7\xed\x67\xa2\x35\x1b\x90\xea\x41\xf9\x28\xaa\x87\xc3\xe3\x9b\x42\xb6\x6d\x48\xcf\x1f\xb8\xc2\x23\xdc\xf3\xb6\x93\x48\x7d\x96\x73\x0d\x3a\xa8\x1a\xe5\x65\xad\x52\x09\xe5\x5a\x82\x5b\x49\x9e\xb4\x41\x70\x5c\x4c\x5b\x70\xb2\x92\x4a\xd8\x5e\xa3\x4c\x74\xf1\x5e\x50\xcd\x4e\x87\xfe\x0f\x55\x63\x4f\xcf\xce\xa8\xab\xcc\x82\x59\x48\x5d\x1a\x5b\x89\xc4\x59\x4b\xbc\x71\x58\x36\xa1\x23\xd8\x52\xcf\x1e\x0b\xec\x4a\xd8\x2f\xe8\x6b\x25\x70\xaa\x09\xe5\x4e\x13\x2a\xb9\xde\x78\x4a\xdb\xb5\xb0\xa1\x79\x4d\x12\x60\x80\xc0\xcd\x61\xbb\x91\x39\x87\x86\xed\x86\x03\x76\x7a\xd4\xe7\xa7\xa5\x2b\x5d\xc4\xbd\x4d\x12\xc2\xae\xa4\xb7\xc2\xee\xc0\xc9\x7f\xd0\xaf\xd6\x8a\x5d\xbb\x7e\x3f\xb4\x26\xe4\xf7\x62\xea\xcb\x1e\x9d\xd3\x40\x87\xea\xc4\x98\xa4\x76\xa0\x9b\x6a\x85\x54\xa4\xb4\x7c\x8f\x8b\x4d\x62\x7d\x20\xb3\x48\x52\x8f\xc2\x01\x49\xf6\x56\x3a\x7f\x0e\x7f\x44\x86\x2e\x75\x69\x3e\xed\x05\x86\xcf\x87\xd6\x4d\xc6\x85\xb4\x16\x96\xed\xb6\x47\x18\x60\x4f\xe5\x2c\x6b\xea\x07\xa2\x98\x07\xe0\x23\x2e\xbe\xd7\xca\xf5\x29\xa4\x35\x17\x9d\x0d\xce\x43\x70\xc9\x53\x7d\xff\x01\xfd\x1c\xae\x94\xd8\xcd\xe1\x03\x5a\x89\x6e\xd8\xdc\x44\x3d\x84\xba\x6e\x2b\x76\x04\xae\x35\xe4\x04\x91\x44\xae\x84\x73\xb2\xdc\x81\xf4\x6e\xac\xa4\xa9\x36\xee\xb7\x31\xff\xc9\xf2\x3a\x75\x3f\xa6\x5f\xb9\x08\x95\xcc\xf1\xb3\xe7\xc9\xa7\x4e\xfe\xf2\xec\xf9\xe2\xe9\xd9\xd9\xec\x18\xa4\xc7\x6a\x1e\x3a\xef\x40\x54\x3a\x78\xf6\xfc\x40\x47\xd8\xb2\xc9\x4b\xd3\x74\x60\xcc\x67\x25\xee\x27\x79\xa5\xb2\x60\x57\xb3\x0a\x62\x84\x18\x70\x0d\xdf\x69\xb3\x38\x73\x92\xb3\x86\xb1\x4f\xc1\x26\xa1\x64\x25\x3d\x16\xa7\xf1\x3c\x2a\xd8\xa7\x48\x3f\x02\x04\xe2\x5a\x3a\x7a\x36\xb9\x95\x16\x85\x40\xd6\xe8\x78\x68\x12\x32\xec\xed\x9a\x41\x47\x0d\x99\x01\x2d\xd5\x01\xf9\x12\x90\x95\xb8\x4f\x28\xee\xa7\xdd\x81\x29\xcc\xf7\x20\x9f\x0f\x76\xfe\x78\x9f\x15\x95\xb2\x8c\x64\xc7\x0b\x48\x9e\x25\x1d\x72\xc0\x47\x9f\xf0\x7f\x4f\x00\xae\xcd\x4e\x28\xbf\x03\x9e\x8d\xa5\x1f\x5f\x63\x29\x35\xa6\x1a\xb0\xaa\x8d\x13\xd4\x6d\xd8\xb8\xb6\x1d\x05\x73\x5c\x5a\xcb\x3b\x4a\x1d\x29\x5a\x53\xc7\x24\xa0\xd1\x54\x2e\x16\x7b\x63\xbf\x27\x40\xb0\xc6\x89\x1e\x07\xb3\x40\x52\xa6\x10\xdf\xb2\xf5\xae\x4f\x8e\xea\xe1\x3f\x1b\xb4\xbb\x60\x82\xb7\xd7\x69\xd3\x6d\x8a\x1b\x3c\x1f\x7d\x7f\x71\x13\xb3\xca\x13\xe0\x0c\x42\xf5\x3a\xde\xd7\x98\xfb\xd0\xd3\xd5\x62\xd7\x1d\x08\x2b\xe1\x42\x77\xe8\x37\xe8\x10\x5c\x8d\xb9\x2c\x63\x09\x3e\x64\x67\x54\x40\xb7\x0c\x8c\xe2\x3c\x25\x87\x18\xae\xad\xc8\xbf\x04\x08\xa5\x2e\xe4\x9d\x2c\x1a\xa1\xba\xe3\xdb\x6d\xa1\x9b\xe3\xac\x3e\x0b\x25\x6e\xe3\x29\xfe\xb9\x73\xf8\x23\x2a\xe7\xd3\xb0\x8b\x8a\xc1\x7b\x62\xdd\xbe\x21\x2d\x16\xf0\x77\xa1\x64\x21\x7c\xec\x1e\x5d\x53\xf1\x58\x46\x29\xda\x9e\xb2\xa5\x44\xdb\x0e\xdd\xb4\xe1\xdc\xb2\xb6\x28\x7c\x6a\x59\x9e\x66\x67\x03\xb2\x77\xc2\x82\x37\x5e\xa8\x57\x0d\xa5\x83\xb3\xbd\xc7\xe4\xd5\xc9\x54\xa4\x6e\xf9\x9c\x28\x9c\x7a\x44\xda\x8f\x3f\xa7\xbd\x59\xde\xf8\xbd\xfa\xa8\xff\x4d\x38\x87\xd6\x9f\xb4\xfb\x7e\x59\x12\x9f\x73\xa8\xd0\x39\xb1\xc6\x73\x38\xfe\x10\x84\x6d\xcf\x7f\xbc\xb4\xc7\xb3\x7d\x18\x5f\x3a\x27\xd7\x3a\x38\x44\xa4\x37\x51\x3a\xa7\x93\x96\xe3\x45\x7b\x75\xf2\x75\x28\xee\xfa\xf4\xb8\x22\x18\x55\xa8\x6b\xf4\xad\xb5\xf1\x84\x36\xe9\xfa\x81\xd6\x79\xe2\x70\x18\xe6\xe7\x30\xee\x61\x67\xa4\x86\x38\x0e\x01\xdd\x60\x64\x97\x54\x48\x86\x12\x72\x37\x79\x3a\xd7\x5d\xd3\xfe\x30\x9a\xbe\xfe\x1e\x27\x35\xc3\xbb\x8c\x6b\xcc\x51\xde\xb5\xad\x24\xc2\x0a\x35\x96\x32\x97\x54\x63\xc5\x94\x18\xcf\x1e\xf6\xa5\x82\xd1\x48\x8d\x69\x6e\x91\xac\x3a\xa6\x23\xde\x94\x08\x73\x90\x4f\xdf\xb2\x35\xfa\x9b\x5d\x8d\x27\xb3\x3d\x05\xe4\xa6\xaa\x50\x17\xa1\x38\x39\x85\x8f\xae\x67\x17\x7c\xd7\x43\x15\x96\xc6\x6d\x18\xe5\x05\x04\x2e\x94\xd9\x06\x29\xec\x50\x0a\xe9\xa0\x21\xdc\xe0\xb6\x55\xd8\x2e\x09\x7a\xd5\xac\x94\xcc\xa9\x41\x3d\x99\xdd\x0e\xcb\x0e\x8a\x52\x64\x83\xa1\xdb\x27\x3d\x94\xa2\x51\x7e\xe2\x9c\x6c\x9c\x5b\x79\xa0\x2b\x94\x32\x5b\xda\x6f\xf9\xfe\xa4\xa9\xa3\xb3\x23\xe4\xa2\x16\x2b\xbe\x69\x22\x2f\xe4\x36\xb5\xf1\x8d\x45\x5e\xe6\x48\x38\x9e\xe3\xa6\x71\x5a\xb7\x7c\x94\xe5\x12\x0f\xe7\xf0\xaa\x5d\xf4\xcb\x4f\x2f\xf5\xee\x3a\xf6\xd3\x5f\x87\x97\x52\x49\xf0\x6f\xbf\x0e\xed\xe1\x5d\xeb\x80\xed\x98\x2d\x17\x2a\x6f\x54\x62\x59\x54\xa6\xd1\x5c\xc7\x3b\xa1\x10\xee\x84\x6a\x90\x02\xa9\x76\x25\x5a\x1b\x07\x73\xd1\xd6\xa6\x81\x79\x6f\x3c\xc2\x29\x5c\xfa\x5e\x36\x5f\xa1\xdf\x22\x6a\x8a\x53\x0c\xf8\xd3\xec\x6c\x58\xa9\xbc\xb9\xa7\x2d\x65\x6c\x70\xda\x83\xa5\x83\xfb\xd0\x89\x74\x7c\x4b\x07\x67\xd9\xbf\xbe\xa0\xa5\xba\x6f\xa9\x71\xcb\x36\x9d\xc9\x8b\x9e\xc0\xfd\xe1\xaa\x8e\x9d\x43\x28\xb5\x83\x1a\x6d\x8e\xda\x8b\x35\xb2\x7d\xb7\x83\xcc\x30\x4f\xf6\x68\x2b\x76\xcc\x95\x70\xd2\x41\x6d\xa4\xf6\xc3\xee\x40\x6a\x70\x46\xc9\x82\x34\x1d\x92\x9a\xab\xa8\x31\x48\x37\x82\xd4\xf9\x48\x45\x06\x51\xa0\xce\xc9\x5d\x4a\xb2\x96\xdb\x8f\x17\xf2\xfe\xc5\xf3\xdb\x90\x19\x84\xb2\x28\x8a\x5d\x7b\xdd\xb6\xd7\x7f\xe0\xe0\x78\xb6\x9f\x5c\x38\xc2\x36\x17\xf4\x85\xaa\x62\x53\xa3\x15\xe3\xe6\x85\xb3\xb0\xf6\xd2\xa2\xda\x51\xa0\x41\x5b\x49\x2d\x9d\x8f\x23\xdc\x35\x15\x97\xed\x4e\xc6\x3b\x15\x08\x4d\x4d\x0a\xff\xb7\x74\xa8\x29\xa1\xb6\x98\x4b\x27\x8d\xce\xc6\x93\xa1\xc6\x9f\x43\x10\x69\x68\x75\xff\x95\xda\xdf\xc1\x48\x3c\x5c\x7a\x87\x99\x6f\xf0\x16\x12\x83\x8e\x10\x3b\xf2\xe3\x9e\x6e\xe7\x23\x2c\x2c\xaa\xc0\xee\x46\xd6\xad\x79\xd1\x83\xdb\xd0\xc0\xde\xa6\x1b\x22\x0a\x96\xf3\xd8\x5c\xf8\x0d\xd1\x45\xe5\xb0\xeb\xe7\xcc\x56\xa3\x8d\x1d\xdd\x56\xe8\x10\x91\xb9\x10\x19\x7b\xe1\x83\xf7\x23\x5c\x13\x90\x4b\xd4\x12\xb5\xff\x71\x47\x9d\xf7\xf1\x9b\x4f\x9d\xb5\x5f\x5b\xd4\x16\x27\x32\x3a\x25\x8b\x5f\xb9\x24\x80\x9f\x7e\xe2\x6f\x21\x2f\xc3\x39\x1c\x53\x96\x0e\x6e\xd2\xf9\xa6\xd4\xf4\x93\x2c\xc0\x0a\xbd\x46\x90\x19\xc2\x1f\x67\xf3\xa7\x9f\x8e\x1f\xc8\xfc\x9c\xe3\xda\xf8\xbb\x84\x56\xec\xc9\x8c\x1c\x92\xf1\xf8\xd1\xf7\xaf\x2a\x46\x59\xf3\xf7\x98\x7d\xc2\x5c\x91\xeb\xa9\x56\x10\x0e\x68\x5c\xf9\x30\x63\xa4\xea\x61\xad\xd7\x86\x6d\x1e\xe8\x77\x24\x38\x8a\xe3\x1d\x6a\xdf\x70\x34\xe8\xd3\xea\x2e\x3b\xdc\x56\xfa\x7c\xb3\x32\x54\x75\x27\xd1\xe7\x2d\xdd\x0d\xfb\x75\xba\x7e\x85\x55\x13\xc9\xa6\x86\xab\x63\xae\x2d\x5c\xe9\x9b\x36\xf1\x42\x75\x54\x6c\x4c\xe6\xae\x73\xe8\xbe\xf5\x54\x1f\x2b\x8f\x45\xcd\x0f\x17\x31\xe9\x5f\xdc\x24\x12\x43\x14\xe1\x65\xbc\x39\x36\x5d\xa0\x83\x77\x58\x48\x31\x4f\xf7\x1c\x9c\xbe\xf9\xe2\xd4\x5a\x74\xb5\x91\x05\xa1\xc9\x97\x2d\x94\xc8\xb3\xfd\xea\x83\x77\x4f\x5c\x64\x94\x3c\xe2\x3e\x78\x9b\xb6\x58\x04\x9a\xa7\x5c\x43\xe4\xa6\x42\x17\xbb\x01\x02\x87\x4b\x47\x7a\xb2\x70\xcd\x8a\x57\x08\x17\xad\x64\x85\x05\x6c\xd0\x62\x37\x96\xc4\x3b\x54\x14\xc3\xb2\xca\xfc\x43\x2a\x25\x32\x63\xd7\x0b\xd4\xa7\x1f\x3f\xf0\xc8\x72\xf1\xdf\xb8\x5a\xfc\xed\xe6\xe6\x6a\xf1\x57\xe1\x64\xee\x3e\x9b\xf2\x33\x7f\x7d\x77\xf9\xee\xcd\x67\x7e\x5d\x65\xdc\x59\x26\x71\x0f\xf8\xfa\xa4\x70\xf3\xf1\xb6\xa1\xdb\xb2\xe5\xd3\xd6\x25\xfd\xd9\x7f\xd0\x6e\x5e\xb6\x9f\x0e\x39\x03\xbc\x04\x25\x73\xd4\x8e\x5f\xde\x30\x96\x55\xe4\x4d\x0b\x89\xab\x8b\x7b\x46\x21\xae\x72\x69\x74\x97\xf6\xdf\xa4\x2b\xfd\xc1\xc5\x5b\x9c\xa7\xa7\x7b\x07\x2a\x47\xc3\xa0\x4f\xba\x74\x5e\x91\x8d\x86\x6e\x6f\x23\x27\x63\x13\x20\x36\x2e\xdb\xcb\x8b\x03\x50\x7e\xee\xdd\x6f\x3c\x78\xbf\x35\xa4\x06\xcb\xde\xbe\x07\x70\x4a\xe6\x8e\xf7\xb5\xe1\xb2\xeb\xe3\xf5\xdb\x70\x2b\x41\xc1\xc0\x63\x05\xfc\x92\x04\xe0\xbd\x47\x4b\x79\xca\x49\x8f\xd9\x14\x5c\x7d\xa4\x56\xbb\xfe\x95\x11\xa1\xf3\x05\x21\x6b\x6f\x87\xfe\xaa\x4c\x4e\x67\x98\x74\xdb\xd4\x56\x88\x9c\x76\xac\x5c\x4b\x3a\xaa\x2b\x6d\x19\xe6\x91\x6b\xbd\x89\x3c\x11\xcb\x3f\x72\x53\xf8\x19\x1e\x71\x57\xb8\x9c\xbc\xe2\x3b\x08\x5c\xe8\xa4\xbb\x79\x62\xbc\x82\x09\x0d\x4c\x78\x49\xcc\x5b\x89\x77\x18\x85\xf9\x51\x04\x29\xf5\xa2\x6f\x6a\x10\x6c\x71\xdd\x8c\x3c\x04\xa4\xda\x92\x87\xf3\x71\x54\xa9\xd1\x81\x21\xe2\x75\x95\x73\x3b\xc6\xe8\x21\xf8\xfe\xe2\xa6\x7b\x6f\xe7\xb5\xf0\xfd\x40\xd5\x5e\x5b\xe9\x96\xec\x96\x03\x0b\x9b\x46\x34\x7b\x9b\x1a\x95\x50\xfe\xae\xd2\xbd\xf6\xb8\x02\x8a\x34\xae\xe2\x15\x4f\xfb\x65\x10\xf2\x42\x08\x0f\xf9\x27\x4c\xc6\xab\xc6\x71\x13\x4c\xb6\x10\xce\x88\x80\x4f\x88\xd7\x8e\x01\x13\xbe\x91\x6a\x78\x05\x88\x62\x40\x3b\x1b\x62\xf6\xd3\xf4\x27\x4e\xf4\xe3\x65\x41\x78\xc1\xab\x7b\x38\x92\xa4\x6e\xf3\x4c\x3f\xe7\x0c\xe5\xb0\xf2\x8e\xda\x86\x9e\x20\x5d\x32\x1e\x89\xc2\x59\x3b\x4c\x1d\x6d\x9f\x4a\xaf\x47\xf2\x86\xf5\x5c\x58\xb1\x0d\x93\x24\x9e\x29\x85\x68\xd4\x5a\xc2\xc6\x28\x96\x92\x16\x8c\xb9\x8e\x07\x44\xbe\x03\x83\x87\x14\xd0\x23\xca\xd9\x25\x5d\xee\x0f\xe6\x55\xf1\xf5\x38\xd7\x94\xd4\x1f\x53\x44\xa4\x22\xfd\x94\xd3\x7a\xf7\xce\x5c\x82\xbc\x7f\x4a\xba\x82\x73\x70\x52\x60\x6d\x9c\xf4\xf0\x73\x7c\xcf\x0b\x7e\x8e\x2f\x8b\xbd\xbf\xb8\xe9\xf7\xc4\x7b\xd7\x9c\x14\x15\x56\x22\xff\xb2\x15\xb6\x70\x3c\x05\x14\x5e\x46\xac\xd8\x21\x46\x97\x48\x1b\x71\x87\xa9\x9b\x0d\xd5\xef\x14\x67\xa3\x57\x18\x3b\xf7\x88\xd0\x74\x2f\x4e\x6c\xa9\xcb\x72\xe8\x3d\x61\xde\xd4\xfd\x23\x33\x1e\xeb\x6a\xdc\x0e\xd4\xd9\x3d\x8f\xf3\xff\x4a\xec\x7a\x03\xdd\x15\x02\xfe\xd9\x08\x95\xe2\x20\x23\x1f\x07\x7f\xa1\xdb\xba\x0d\xa6\xf7\x96\x0d\x88\x12\xe0\xed\xd8\xcf\xc2\x92\x8e\xed\xf0\x92\xe0\x40\xc9\x37\xad\x4a\x47\x46\x19\x2b\x7f\x51\x1a\xcb\x2f\xb7\x85\x99\x77\xdd\xb9\x65\xd6\x96\x89\x9a\x62\x1d\xd5\x84\xa2\x4f\xdb\xa2\xf3\x56\x06\x1b\xa1\x63\x58\x19\x95\xd0\xbb\x9e\x47\x65\xd4\x08\x8b\x95\x0a\x17\x5e\xb7\x14\xda\xf7\x61\x1e\x4c\x22\xc2\x92\x54\xb1\xdd\xce\xd9\x5d\x6f\x07\x6f\x92\x66\xe3\xd7\x10\x6f\x07\x0e\xce\x2f\x47\xfc\xd9\xc8\xc9\xd8\xb4\x0f\xeb\x3f\x05\xb3\x5e\x08\x18\x83\xd6\x27\x2d\xa6\x41\xa3\xb6\x17\xa8\x19\xad\x9a\xaa\x03\xea\x2a\xba\xf1\xed\xde\xf0\x7a\xca\xd5\x1f\x14\xe8\x22\x5d\x83\xc7\x06\x5b\x99\xad\x0b\x93\xa5\xf8\xb2\x1a\x25\xfd\xaa\xf6\xbb\xfd\x7c\x93\x62\x01\x9d\x9f\xe2\x3e\x07\xfd\x3e\xf5\x14\x86\x27\x3a\x61\x1e\x5e\xbd\x21\xca\x7d\x23\x3d\xa1\x0a\xfe\x3f\x1e\x70\xbf\xd9\x43\x6f\x9a\x1d\x4a\x2e\xc3\x97\xca\xa6\x03\xf7\xde\x9a\x43\x61\x72\x8a\xd4\xbe\x97\x4d\xad\xd9\x57\xc2\xf4\x71\x0f\xaf\x9a\xc4\x2c\x29\xf0\x51\xd8\x25\x4a\x8f\xeb\x93\xf7\x39\xcf\xa4\xfb\x10\xfa\x8c\x13\x53\x06\x06\x7f\xf9\xe9\xeb\x77\x63\xe5\x7c\x1c\x4e\x93\x13\xcf\xe1\x7b\xee\xfb\xed\xd7\x93\xd9\xec\x1c\x8e\x63\xd8\x65\xbf\xe0\x62\x20\xbe\xd0\xfb\xfd\x50\xfd\xe0\xf1\x14\x42\xbe\xc7\x42\x3f\x64\x1d\x8f\x41\x1a\xa9\xee\x91\x30\x25\x17\x9e\xe0\x6f\x2c\xc2\xa3\x61\x8a\x44\x1f\x03\xd4\x0f\x31\xf0\x63\x40\x65\xdf\x1d\x8d\xf4\x5c\x75\xd9\xfb\x3c\x5e\xd8\x79\xeb\xb2\xfb\x38\xb1\xac\xe7\xb0\xb0\x1c\xf8\xef\x21\x9a\x1d\xe3\xcb\xfd\x1f\x0e\x6d\xe9\x94\xbc\xdc\xff\xe1\x30\x4b\xdd\x9a\x1e\x63\x0f\x6d\x9c\xf4\xf3\xe5\x83\xde\x3f\x6a\x51\xbe\x1d\xfd\x5f\x00\x00\x00\xff\xff\x86\x0c\xd8\x5c\x37\x33\x00\x00"

func metadataviewsCdcBytes() ([]byte, error) {
	return bindataRead(
		_metadataviewsCdc,
		"MetadataViews.cdc",
	)
}

func metadataviewsCdc() (*asset, error) {
	bytes, err := metadataviewsCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "MetadataViews.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x1, 0xda, 0xc0, 0xd1, 0x5c, 0x88, 0x66, 0xed, 0xbf, 0x76, 0x9b, 0xfa, 0xf2, 0x27, 0x3f, 0x10, 0xd6, 0x3, 0xd, 0xaf, 0x6a, 0x4c, 0x0, 0x9c, 0x9f, 0x62, 0xcd, 0x13, 0x3e, 0xf1, 0x80, 0x84}}
	return a, nil
}

var _nonfungibletokenCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x57\x41\x8f\xdb\xba\x11\xbe\xeb\x57\xcc\xcb\x03\x9a\xdd\xc0\x6b\xf7\x50\xf4\x60\x20\x68\xda\xb7\x6f\x01\x5f\xb6\x0f\x5b\x17\x3d\x04\x01\x4c\x8b\x23\x9b\x08\x45\x2a\x24\x65\xc7\x0d\xf6\xbf\x17\x33\x24\x25\xca\xf6\x26\x9b\x5b\x73\x89\x57\x22\xbf\x99\xf9\xe6\x9b\x8f\xd4\xe2\xdd\xbb\xaa\xfa\xf5\x57\x58\xef\x11\x1e\xb4\x3d\xc2\xa3\x35\x77\x0f\xbd\xd9\xa9\xad\x46\x58\xdb\xcf\x68\xc0\x07\x61\xa4\x70\x92\x17\x6e\x1e\xad\xc9\xef\xf9\xf5\x06\x6a\x6b\x82\x13\x75\x00\x65\x02\xba\x46\xd4\x58\x55\x84\x37\xfc\x09\x61\x2f\x02\x08\xad\xc1\x58\x73\xd7\x64\xf4\xc0\xe8\x79\xb7\x87\xda\xf6\x5a\xd2\xdf\x8d\x75\x2d\x04\x3b\xaf\x56\x0d\x08\xe8\x3d\x3a\x38\x0a\x13\x3c\x04\x0b\x12\x3b\x6d\x4f\x20\xc0\xe0\x11\x4c\x13\x86\xfd\x33\x08\x7b\x54\x6e\xcc\xe6\xc8\x70\x06\x51\x56\xc1\x82\x6a\x3b\x8d\x2d\x9a\x40\xcb\xe0\xbc\x88\x31\xd7\x39\xe7\x7e\x89\xb3\x17\x07\xca\x18\x1a\xab\x89\x26\x2a\x86\x80\x5c\xaf\xd1\x83\x30\x12\x8c\x68\x95\xd9\x55\x5c\x6a\x98\x54\xef\x3b\xac\x55\xa3\xd0\xcf\x13\x83\x0f\xeb\x0d\x38\xf4\xb6\x77\x99\xaa\xda\x3a\x1c\x1e\x41\x38\x75\x89\x33\x87\x9d\x43\x8f\x54\xbb\x30\xf0\xf8\xb0\x06\x65\x18\xdd\xb7\xc2\x8d\xb5\x27\xe0\xdf\xac\xd6\x58\x07\x65\xcd\x06\x9e\x26\xf8\x23\x34\xa1\xfa\x60\x1d\x65\xcd\xd4\xbe\xf5\x8c\x5b\x0f\x7b\xe7\xd5\x8a\x5a\x59\xeb\x5e\xf2\xa2\x06\x8f\xd0\xf4\x86\xdf\x71\x0b\x04\x33\x40\x59\xd8\xa3\x41\x47\x8f\x50\x78\xa5\x4f\x55\x6b\x0f\xa9\xad\x9e\x12\x25\x5a\x6c\x1f\xc0\x36\xbc\xba\x0c\xc1\xf9\xfe\xe1\xec\x41\x49\x74\x1b\x5e\xb9\x79\xc2\x1a\xd5\x81\xfe\x1c\xd2\x1d\x48\xf4\x5c\x87\x2f\x9f\x80\xc4\x5a\x0b\x87\x45\x72\x47\x15\xf6\xe0\x6d\x8b\xd0\x39\x64\xd0\xce\x7a\xa6\x49\x2a\x5e\x51\x25\x56\xbf\xf4\xca\x21\x27\x35\x72\x56\x74\xb7\x46\x17\x84\x32\xa9\xa7\x0c\xb4\xc5\xbd\x38\x28\xeb\x86\x69\xf0\x51\x29\x27\xa0\x14\x3c\x76\xc2\x89\x80\xb0\xc5\x5a\xf4\x94\x66\x80\x9d\x3a\xa0\xe7\x18\xac\x60\xfa\x21\xb6\x4a\xab\x70\xa2\x48\x7e\x4f\xfb\x04\x38\x6c\xd0\xa1\xa9\x91\x44\x1a\x15\x5c\xa6\x44\xe9\x5a\xa3\x4f\x80\x5f\x3b\xeb\x13\x5e\xa3\x50\xcb\xa8\xba\xb1\x76\x65\xc0\x1a\x04\xeb\xa0\xb5\x0e\xab\xc4\xf9\x48\xd7\x1c\x56\x34\x83\xde\xa6\xc4\x28\x29\x7f\x9e\x55\x2b\x3e\x23\xd4\xbd\x0f\xb6\x1d\x9a\x90\x48\x9b\x0c\xd0\xb4\x11\x34\x96\x16\x0e\xc2\x29\xdb\x13\xa4\x32\xbb\xd4\x0b\x82\x8f\x7a\x98\x57\xd5\x3f\x4e\xd0\x7b\xe2\x73\x40\xe6\x12\x46\xa0\x59\x4a\xca\x36\x2c\xc9\xa9\xc6\x3d\xd4\xc2\x80\x47\x23\x2b\xda\xe5\xa2\x58\xb2\xda\x3a\x44\x77\x17\xec\x1d\xfd\x3f\xe3\xd8\x24\x3c\x6a\x99\xd9\x51\x7e\x1c\x84\xa7\x99\xd2\x12\x50\x23\xa1\x6a\xd0\x28\x77\xe8\xaa\x8b\x71\x5a\x5b\x0e\x95\xa7\x8e\x54\x6f\x6c\xd8\xa3\xe3\x14\x67\x83\x2d\xb1\x37\x78\xe2\xe6\xc4\xd0\xd2\x89\x38\x1a\x8f\x0f\xeb\xaa\x71\xb6\xbd\xe8\x29\xfb\x94\x81\x3a\x3b\x88\xc4\xce\x7a\x15\x86\x4e\x82\x35\x93\x58\x6f\x7d\x35\xd5\x68\x6d\xa9\x13\x21\xca\x37\x38\x61\x7c\x83\x6e\x5e\x55\xef\x16\x55\xb5\x58\xb0\x93\xb7\x24\xde\x38\xd5\xe7\xd6\x3c\x87\x7f\x32\x74\xf9\x96\x9a\xa5\x35\x6d\x56\x6d\x67\x5d\x88\x6d\x29\xfa\xad\x7c\xe1\xed\x8b\x45\xd5\xf5\xdb\x2b\xd0\x97\xae\xfa\xad\xaa\x00\x00\x52\x56\xc1\x06\xa1\xc1\xf4\xed\x16\x1d\x7b\x42\x6c\x1d\x2b\x55\xf9\xe8\x7a\xca\x00\x7e\x55\x3e\xf0\x44\xd0\x5e\x0a\x75\x10\x2e\x6e\xfe\x57\xdf\x75\xfa\xb4\x84\x7f\xaf\x4c\xf8\xeb\x5f\x06\xf0\xdf\x0f\x31\x4d\x11\x00\x5b\x15\x02\x4a\x38\x12\xc7\xa9\x0f\x45\xaa\x54\x87\x0a\x4a\x68\xf5\x5f\x94\x69\xfb\x10\x06\x19\xe6\xb7\xb4\x78\x35\x2e\xbc\xb9\xbd\x16\x4a\xf9\x69\x34\x91\x0e\x34\xe5\x07\x25\x98\x59\xde\xa7\x8c\x54\xb5\x08\xac\xc6\xc1\x38\x2f\x7c\x31\x01\x07\x38\x8a\x02\x04\x48\x47\xf3\x32\xdb\xc5\x02\x56\x17\x7b\x95\x07\x63\x43\xf4\x5d\x10\x75\x6d\x7b\x13\xde\x7a\x36\x7b\xb1\xc3\x19\x6c\x08\x66\xc3\xad\x86\x2d\xc2\xc6\x28\xbd\x99\x5f\xe7\xe0\x3f\x29\xf4\x8d\x92\x99\xec\x19\x67\xb1\x84\xbf\x4b\xe9\xd0\xfb\xbf\x5d\xa5\xe4\x25\x3e\x92\xc6\x51\xf2\x20\x4d\x0e\x82\xb3\xaa\x42\x66\x2a\x59\xdd\x6b\x88\x2a\xd1\x5f\x28\xe8\x3e\x2e\x99\xd4\x13\xec\xb5\x6a\x56\xd3\x4b\x4b\x92\x90\x1f\xce\xff\xf1\x7a\x72\x1e\xe9\xf2\xd0\x82\x15\xa9\xef\x1b\xaf\x28\xe6\xa0\x37\xea\x4b\x8f\xb0\xba\x4f\xa4\x89\x7a\xcf\x32\xdd\x0b\x3f\x2c\x25\x40\x8d\x01\xc6\x84\xf9\xd5\xf3\x90\xe7\x53\x3c\xc3\xda\x81\x7b\xf2\x93\x94\x1c\xa9\xec\x9a\x81\x52\x0d\x79\x3f\x5f\xa5\x1a\x65\xe2\x19\x94\x32\x27\x53\x42\x19\x1d\x8f\x30\x13\x1e\x3b\x3c\xd5\x72\x59\xeb\xe3\xc3\x7a\x79\x5e\xe6\x0f\x73\x2f\x38\xb6\xd0\xa2\x54\x74\x72\x66\xb9\x7b\xc8\xb6\x59\x98\xe6\x2b\xb8\xce\x97\x89\x29\xdf\x83\x27\x3b\xa4\xcb\xc9\x70\x8d\x1a\x62\x14\x9a\x22\xd7\x8b\x8b\x54\x80\x78\x1a\x47\x46\xdc\xa4\xb4\xa6\x37\x03\xec\x4d\xfe\xb1\xba\xcf\xb5\xde\x2e\xe1\xc3\x94\x0f\xde\x48\xf7\x90\xe9\x23\xfa\xe7\xd0\xf7\x3a\xcc\x95\x84\xf7\xef\xa1\xc4\x7a\x43\x42\x59\xdd\x67\xe5\x8f\x5e\x10\x67\xaa\xed\x7d\xa0\x21\xe6\xab\xa0\x68\x11\x44\x1c\x17\xba\xd9\xa0\xa7\x51\x58\xdd\xbf\x99\x44\x7b\xae\xa6\xbf\x7e\xd0\x8d\x34\x53\x3e\xf3\xf0\x53\xad\xc8\x17\xb9\xec\xff\x29\x50\x3e\xe9\x82\xf8\x3c\x36\x42\xf0\x2f\xe1\x76\x3d\x4b\x99\x7a\x20\xa4\x2c\x5b\x70\x16\xba\x08\x5f\x76\x24\x81\xdf\x30\x3f\xb1\x05\xb7\x2f\x17\xca\x03\x33\xb8\x64\x3a\xc6\x6b\xdb\xb6\x7c\xd7\xca\x1b\xba\x7e\xab\x95\xdf\x43\x63\xdd\xf0\x71\x31\xc9\xe5\x85\xfa\xc7\x8c\xff\x20\x84\xfa\x6c\x36\xbe\x9b\x6e\xb9\x68\x87\x61\x75\xef\x6f\x6e\x97\xf0\x31\x6a\xeb\xd3\xc5\x92\xad\x75\xce\x1e\x1f\x1f\xd6\x85\xb5\xdd\x2e\xe1\x4f\x79\x58\xaf\x1b\x46\x2a\x28\x0d\x80\xa9\x1d\x5d\x27\x26\x9f\x1f\x85\x4d\x6c\x31\xdf\xb4\x65\xfe\xfa\x18\xee\x06\xe4\x34\xd9\x5f\x5e\x14\xc6\x48\xc7\x72\x98\xd2\xd9\x20\x92\xd9\x35\xba\x4a\xd9\xdc\x2b\x7e\x27\x1c\xdf\x50\xf7\x56\xcb\xd1\x95\x53\x3e\x57\x24\x92\xef\x0d\x74\x80\x48\x5a\xbb\x84\x0f\xdf\x22\x3f\x4b\xda\xfb\x5c\xfd\x5f\xd8\xc4\xf7\x06\x24\xce\xc7\xe5\x40\x8c\xb9\x78\x90\x03\x39\x25\xd0\xb0\x29\x44\x17\x49\x1b\x95\x04\xe1\x9c\x38\xbd\x4e\x8d\x25\x60\x54\x22\x38\x0c\xbd\x33\x69\x62\x9d\x38\x65\x7b\xa2\x77\x71\xa6\x1c\xe6\x9e\xd4\xd7\x7b\xf2\x82\xae\xcb\x60\x4f\x39\x4a\x52\x37\xca\xf1\x2b\x29\xde\xc4\xcb\x2f\xe1\x2b\x71\x16\x0b\xf0\x76\x3c\xbf\x63\x73\xf8\xf3\xc1\xa1\x90\x20\x45\x10\x4c\x11\xdf\xc1\x5b\x0c\x7b\x2b\xd3\xa9\xa3\xc2\xcf\x4c\xd8\xb9\xc7\x3b\xbc\x62\xf1\x1e\x75\x33\x1f\x54\xf8\x51\xc9\x4f\xf0\xcb\x7b\x30\x4a\x2f\xe1\x0d\x61\x48\x8b\xf1\xe2\xc6\xf7\xde\xcb\xaa\x7e\x79\xad\x8f\xd7\x0e\x45\xc0\xdf\xdb\x2e\x9c\x8a\x0f\x86\xf8\x94\x5b\x86\xf4\xea\xd2\xc9\x21\x7e\x4e\x45\xce\xcf\x25\x5d\x12\x79\x62\x0a\xed\x91\xe9\xf7\x55\x49\xd2\xd5\xd8\xd4\xe0\x0f\x45\x2a\x85\x0b\x5e\x9e\x86\xe9\x24\xcc\xd2\x98\x6b\x34\xbb\xb0\xa7\x63\xf1\xcf\xe9\x34\x8c\x31\x64\x39\x8a\xf9\x18\xe4\xca\x0a\xa2\x32\x35\xcf\xd5\xff\x02\x00\x00\xff\xff\x33\x4d\x81\x27\xe0\x12\x00\x00"

func nonfungibletokenCdcBytes() ([]byte, error) {
	return bindataRead(
		_nonfungibletokenCdc,
		"NonFungibleToken.cdc",
	)
}

func nonfungibletokenCdc() (*asset, error) {
	bytes, err := nonfungibletokenCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NonFungibleToken.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xdb, 0x61, 0xca, 0x9d, 0xaa, 0x66, 0x36, 0xdf, 0xbc, 0x51, 0xdb, 0x7b, 0x51, 0xd8, 0x3d, 0x6f, 0x4e, 0x9c, 0x8e, 0x50, 0x28, 0x7c, 0x18, 0x1d, 0x2, 0xb2, 0xc2, 0x2b, 0x26, 0xa1, 0xfe, 0x2d}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"ExampleNFT.cdc":       examplenftCdc,
	"MetadataViews.cdc":    metadataviewsCdc,
	"NonFungibleToken.cdc": nonfungibletokenCdc,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"ExampleNFT.cdc": {examplenftCdc, map[string]*bintree{}},
	"MetadataViews.cdc": {metadataviewsCdc, map[string]*bintree{}},
	"NonFungibleToken.cdc": {nonfungibletokenCdc, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
